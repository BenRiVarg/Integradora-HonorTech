{"ast":null,"code":"var _jsxFileName = \"/home/ben/Repos/Integradora-HonorTech/RestaurantExpo/app/screens/Sucursales/Sucursal.js\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { firebaseApp } from \"../../utils/firebase\";\nimport firebase from 'firebase/app';\nimport \"firebase/firestore\";\nimport CarouselImagenes from \"../../components/Sucursales/CarouselImagenes\";\nimport Reviews from \"../../components/Sucursales/Reviews\";\nimport { map } from \"lodash\";\nimport { Rating, ListItem, Icon } from 'react-native-elements';\nvar db = firebase.firestore(firebaseApp);\nvar screenWidth = Dimensions.get(\"window\").width;\nexport default function Sucursal(propiedades) {\n  var navigation = propiedades.navigation,\n      route = propiedades.route;\n  var platillo = route.params.platillo;\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction Informacion(propiedades) {\n  var _this = this;\n\n  var nombre = propiedades.nombre,\n      direccion = propiedades.direccion,\n      descripcion = propiedades.descripcion,\n      rating = propiedades.rating;\n  var listaItems = [{\n    text: direccion,\n    iconName: \"google-maps\",\n    iconType: \"material-community\",\n    action: null\n  }, {\n    text: \"443 1893456\",\n    iconName: \"phone\",\n    iconType: \"material-community\",\n    action: null\n  }, {\n    text: \"mail@gmail.com\",\n    iconName: \"at\",\n    iconType: \"material-community\",\n    action: null\n  }];\n  return React.createElement(View, {\n    style: styles.viewSucursal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.nombre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, nombre), React.createElement(Rating, {\n    style: styles.rating,\n    imageSize: 20,\n    readonly: true,\n    startingValue: parseFloat(rating),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.descripcion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, descripcion)), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, listaItems.map(function (item, index) {\n    return React.createElement(ListItem, {\n      key: index,\n      containerStyle: styles.listaInfo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, React.createElement(Icon, {\n      name: item.iconName,\n      type: item.iconType,\n      color: \"#0A6ED3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }), React.createElement(ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, item.text)));\n  })));\n}\n\nvar styles = StyleSheet.create({\n  sucursales: {\n    marginTop: 10,\n    marginBottom: 10,\n    alignItems: 'center'\n  },\n  body: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  viewSucursal: {\n    padding: 15\n  },\n  nombre: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  descripcion: {\n    marginTop: 5,\n    color: \"grey\"\n  },\n  direccion: {\n    marginTop: 5,\n    color: \"grey\"\n  },\n  direccionTitulo: {\n    fontWeight: \"bold\",\n    marginTop: 5,\n    color: \"grey\"\n  },\n  rating: {\n    position: \"absolute\",\n    right: 0\n  },\n  listaInfo: {\n    borderBottomColor: \"#D8D8D8\",\n    borderBottomWidth: 1\n  }\n});","map":{"version":3,"sources":["/home/ben/Repos/Integradora-HonorTech/RestaurantExpo/app/screens/Sucursales/Sucursal.js"],"names":["React","useEffect","useState","useCallback","useFocusEffect","firebaseApp","firebase","CarouselImagenes","Reviews","map","Rating","ListItem","Icon","db","firestore","screenWidth","Dimensions","get","width","Sucursal","propiedades","navigation","route","platillo","params","Informacion","nombre","direccion","descripcion","rating","listaItems","text","iconName","iconType","action","styles","viewSucursal","flexDirection","parseFloat","item","index","listaInfo","StyleSheet","create","sucursales","marginTop","marginBottom","alignItems","body","flex","backgroundColor","padding","fontSize","fontWeight","color","direccionTitulo","position","right","borderBottomColor","borderBottomWidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState ,useCallback} from 'react'; \nimport { useFocusEffect } from \"@react-navigation/native\";\nimport {StyleSheet, View, Text, ScrollView, Dimensions,ActivityIndicator} from \"react-native\"; \nimport {firebaseApp} from \"../../utils/firebase\"; \nimport firebase from 'firebase/app'; \nimport \"firebase/firestore\"; \nimport CarouselImagenes from '../../components/Sucursales/CarouselImagenes'; \nimport Reviews from '../../components/Sucursales/Reviews';\n\nimport {map} from \"lodash\"; \n/*Rating nos permite colocar la puntuación de la sucursal con estrellas \nLisItem nos permitirá visualizar las propiedades de cada sucursal como una lista*/ \n\nimport { Rating, ListItem, Icon } from 'react-native-elements'\n\n\nconst db = firebase.firestore(firebaseApp); \n//Obtenemos el ancho de la ventana del dispositivo \nconst screenWidth=Dimensions.get(\"window\").width; \n\n\nexport default function Sucursal(propiedades){ \n    \n\n    //Extraemos los objetos navigation y route  \n    const {navigation,route}=propiedades; \n   //Extraemos el id y nombre contenido en el objeto params de route  \n    const {platillo}=route.params; \n     \n    /* //useState para almacenar datos de la sucursal \n    const[sucursal,setSucursal]=useState(null); \n\n    //Estado para puntuación de la sucursal \n    const [rating, setRating]=useState(0); \n\n    useEffect(() => { \n       \n        navigation.setOptions({ title: nombre }); \n      }, []);  */\n\n     \n\n    /*  useFocusEffect( \n        useCallback(()=>{  \n\n                    //Consultamos la sucursal con id recibido como parámetro desde la lista de sucursales\n            db.collection(\"sucursales\").doc(id).get() \n            .then((resp) =>{ \n                //Extraemos los datos del documento recuperado en la consulta\n                const datos=resp.data(); \n                //Asignamos el id al conjunto de datos\n                datos.id=resp.id; \n                //Asignamos los datos de la sucursal recuperado a nuestro useState\n                setSucursal(datos); \n                //Asignamos un rating promedio al state que se muestra en la vista\n                setRating(datos.rating)\n            }); \n\n         },[]) \n        ); */\n\n   return( \n        <View> \n            {/* {sucursal?( \n                \n                <ScrollView vertical> \n                    <CarouselImagenes \n                   \n                        arrayImages={sucursal.imagenes} \n                        height={250} \n                        width={screenWidth} \n                    /> \n\n                    <Informacion  \n                        nombre={sucursal.nombre} \n                        direccion={sucursal.direccion} \n                        descripcion={sucursal.descripcion} \n                        rating={rating} \n                    />\n                    \n                    <Reviews \n                    navigation={navigation} \n                    id={sucursal.id} \n                    nombre={nombre}\n                    /> \n                </ScrollView> \n            ):( \n                <View style={styles.sucursales}> \n                     \n                    <ActivityIndicator size=\"large\" color=\"#0000ff\"/> \n                    <Text>Cargando Sucursal</Text> \n                </View> \n            )}  */}\n        </View> \n         \n    )\n} \n\nfunction Informacion(propiedades){ \n    const {nombre, direccion, descripcion, rating}=propiedades; \n\n    const listaItems =[ \n        //El primer elemento de la lista será nuestra dirección \n        { \n           text: direccion, \n           iconName: \"google-maps\", \n           iconType: \"material-community\", \n           action:null, \n         \n        }, \n        //podemos agregar multiples valores como no tenemos mas datos en la bd \n        //colocaremos datos fijos para ejemplificar \n        { \n            text: \"443 1893456\", \n            iconName: \"phone\", \n            iconType: \"material-community\", \n            action:null, \n            \n         }, \n         { \n                text:\"mail@gmail.com\", \n                iconName: \"at\", \n                iconType: \"material-community\", \n                action:null, \n                }\n    ];\n\n    return ( \n        <View style={styles.viewSucursal}> \n            <View style={{flexDirection: 'row'}}> \n                <Text style={styles.nombre}>{nombre}</Text> \n                <Rating  \n                style={styles.rating} \n                imageSize={20} \n                readonly \n                startingValue={parseFloat(rating)} \n                /> \n             </View> \n            <View style={{flexDirection: 'row'}}> \n                <Text style={styles.descripcion}>{descripcion}</Text> \n            </View> \n            <View> \n            { \n                listaItems.map((item, index) => ( \n                <ListItem key={index}  containerStyle={styles.listaInfo}> \n                    <Icon  name={item.iconName} type={item.iconType} color=\"#0A6ED3\" /> \n                    <ListItem.Content> \n                    <ListItem.Title>{item.text}</ListItem.Title> \n                    </ListItem.Content> \n                </ListItem> \n                )) \n            } \n            </View> \n        </View> \n    )\n}\nconst styles = StyleSheet.create({\n\n    sucursales:{ \n        marginTop:10, \n        marginBottom:10, \n        alignItems: 'center', \n    }, \n    body:{ \n        flex: 1, \n        backgroundColor: 'white' \n         \n    }, \n    viewSucursal:{ \n        padding:15 \n    }, \n    nombre: { \n        fontSize:20, \n        fontWeight:\"bold\" \n    }, \n    descripcion: { \n        marginTop:5, \n        color:\"grey\" \n    }, \n\n    direccion: { \n        marginTop:5, \n        color:\"grey\" \n    }, \n    direccionTitulo: { \n        fontWeight:\"bold\", \n        marginTop:5, \n        color:\"grey\" \n    }, \n    rating: { \n        position:\"absolute\", \n        right:0 \n    }, \n    listaInfo: { \n        borderBottomColor:\"#D8D8D8\", \n        borderBottomWidth:1 \n         \n    } \n}) ;"]},"metadata":{},"sourceType":"module"}