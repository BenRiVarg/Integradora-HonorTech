{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ben/Repos/Integradora-HonorTech/RestaurantExpo/app/components/Sucursales/Reviews.js\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Rating } from \"react-native-elements\";\nimport { map } from \"lodash\";\nimport { firebaseApp } from \"../../utils/firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nvar db = firebase.firestore(firebaseApp);\n\nfunction Review(propiedades) {\n  var _propiedades$review = propiedades.review,\n      title = _propiedades$review.title,\n      review = _propiedades$review.review,\n      rating = _propiedades$review.rating,\n      createAt = _propiedades$review.createAt;\n  var createReview = new Date(createAt.seconds * 1000);\n  return React.createElement(View, {\n    style: styles.viewReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.viewInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.reviewTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, title), React.createElement(Text, {\n    style: styles.reviewText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, review), React.createElement(Rating, {\n    imageSize: 15,\n    startingValue: rating,\n    readonly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.reviewDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, createReview.getDate(), \"/\", createReview.getMonth() + 1, \"/\", createReview.getFullYear(), \" - \", createReview.getHours(), \":\", createReview.getMinutes() < 10 ? \"0\" : \"\", createReview.getMinutes())));\n}\n\nexport default function Reviews(propiedades) {\n  var _this = this;\n\n  var navigation = propiedades.navigation,\n      id = propiedades.id,\n      nombre = propiedades.nombre;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      userLogged = _useState2[0],\n      setUserLogged = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reviews = _useState4[0],\n      setReviews = _useState4[1];\n\n  firebase.auth().onAuthStateChanged(function (user) {\n    user ? setUserLogged(true) : setUserLogged(false);\n  });\n  useFocusEffect(useCallback(function () {\n    db.collection(\"reviews\").where(\"idSucursal\", \"==\", id).get().then(function (response) {\n      var resultReview = [];\n      response.forEach(function (doc) {\n        var data = doc.data();\n        data.id = doc.id;\n        resultReview.push(data);\n      });\n      setReviews(resultReview);\n    });\n  }, []));\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, userLogged ? React.createElement(Button, {\n    title: \"Escribe una opini\\xF3n\",\n    buttonStyle: styles.btnAddReview,\n    titleStyle: styles.btnTitleAddReview,\n    icon: {\n      type: \"material-community\",\n      name: \"square-edit-outline\",\n      color: \"#0A6ED3\"\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"add-review-sucursal\", {\n        id: id,\n        nombre: nombre\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      color: \"#0A6ED3\",\n      padding: 20\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"login\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, \"Para escribir un comentario es necesario estar logeado\", \" \", React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"pulsa AQU\\xCD para iniciar sesi\\xF3n\"))), map(reviews, function (review, index) {\n    return React.createElement(Review, {\n      key: index,\n      review: review,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    });\n  }));\n}\nvar styles = StyleSheet.create({\n  btnAddReview: {\n    backgroundColor: \"transparent\"\n  },\n  btnTitleAddReview: {\n    color: \"#0A6ED3\"\n  },\n  viewReview: {\n    flexDirection: \"row\",\n    padding: 10,\n    paddingBottom: 20,\n    borderBottomColor: \"#0A6ED3\",\n    borderBottomWidth: 1\n  },\n  viewInfo: {\n    flex: 1,\n    alignItems: \"flex-start\"\n  },\n  reviewTitle: {\n    fontWeight: \"bold\"\n  },\n  reviewText: {\n    paddingTop: 2,\n    color: \"grey\",\n    marginBottom: 5\n  },\n  reviewDate: {\n    marginTop: 5,\n    color: \"grey\",\n    fontSize: 12,\n    position: \"absolute\",\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["/home/ben/Repos/Integradora-HonorTech/RestaurantExpo/app/components/Sucursales/Reviews.js"],"names":["React","useEffect","useState","useCallback","useFocusEffect","Button","Rating","map","firebaseApp","firebase","db","firestore","Review","propiedades","review","title","rating","createAt","createReview","Date","seconds","styles","viewReview","viewInfo","reviewTitle","reviewText","reviewDate","getDate","getMonth","getFullYear","getHours","getMinutes","Reviews","navigation","id","nombre","userLogged","setUserLogged","reviews","setReviews","auth","onAuthStateChanged","user","collection","where","get","then","response","resultReview","forEach","doc","data","push","btnAddReview","btnTitleAddReview","type","name","color","navigate","textAlign","padding","fontWeight","index","StyleSheet","create","backgroundColor","flexDirection","paddingBottom","borderBottomColor","borderBottomWidth","flex","alignItems","paddingTop","marginBottom","marginTop","fontSize","position","right","bottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState ,useCallback} from 'react'; \nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { StyleSheet, Text, View } from \"react-native\"; \nimport { Button, Rating } from \"react-native-elements\"; \nimport { map } from \"lodash\"; \nimport { firebaseApp } from \"../../utils/firebase\"; \nimport firebase from \"firebase/app\"; \nimport \"firebase/firestore\"; \nconst db = firebase.firestore(firebaseApp)\n\nfunction Review(propiedades) { \n    const { title, review, rating, createAt } = propiedades.review; \n    //Convertimos la fecha Timestamp  de firebase a una fecha de JavaScript \n    //Con una precision de millisecond. \n    const createReview = new Date(createAt.seconds * 1000); \n    return ( \n      <View style={styles.viewReview}> \n       \n        <View style={styles.viewInfo}> \n          <Text style={styles.reviewTitle}>{title}</Text> \n          <Text style={styles.reviewText}>{review}</Text> \n          <Rating imageSize={15} startingValue={rating} readonly /> \n          <Text style={styles.reviewDate}> \n            {/*Extraemeo de la fecha los valores por separado */} \n            {createReview.getDate()}/{createReview.getMonth() + 1}/ \n            {createReview.getFullYear()} - {createReview.getHours()}: \n            {createReview.getMinutes() < 10 ? \"0\" : \"\"} \n            {createReview.getMinutes()} \n          </Text> \n        </View> \n      </View> \n    ); \n  }\n\n  export default function Reviews(propiedades) { \n    //recibe la navegación de la ventana anterior \n    // para regresar después de registrar la puntuación \n    //y el id de la sucursal que se actualizará \n    const { navigation, id,nombre } = propiedades; \n    //Solo se permitirá registrar comentarios y valuación si existe sesión \n    const [userLogged, setUserLogged] = useState(false); \n    //estado que almacenará las puntuaciones registradas \n    const [reviews, setReviews] = useState([]); \n   //Validamos la existencia de sesión \n    firebase.auth().onAuthStateChanged((user) => { \n      user ? setUserLogged(true) : setUserLogged(false); \n    }); \n  \n    useFocusEffect( \n      useCallback(()=>{  \n  //consultamos la colección de reviews de la sucursal y almacenamos \n      // los documentos en el useState de reviews \n      db.collection(\"reviews\") \n        .where(\"idSucursal\", \"==\", id) \n        .get() \n        .then((response) => { \n          const resultReview = []; \n          response.forEach((doc) => { \n            const data = doc.data(); \n            data.id = doc.id; \n            resultReview.push(data); \n          }); \n          setReviews(resultReview); \n        });           \n\n       },[]) \n      );\n\n    return ( \n        <View> \n          {/*Si el usuario tiene sesión activa se permite registrar la opinión y voto, \n          aparecerá un botón para  abrir la ventana de votación*/} \n          {userLogged ? ( \n            <Button \n              title=\"Escribe una opinión\" \n              buttonStyle={styles.btnAddReview} \n              titleStyle={styles.btnTitleAddReview} \n              icon={{ \n                type: \"material-community\", \n                name: \"square-edit-outline\", \n                color: \"#0A6ED3\", \n              }} \n              onPress={() => \n                navigation.navigate(\"add-review-sucursal\", { \n                  id: id, nombre: nombre\n                }) \n              } \n            />) : ( \n                <View> \n                  {/*Si no hay sesión se solicita inicias sesión redirigiendo  \n                a la ventana de login  */} \n                  <Text \n                    style={{ textAlign: \"center\", color: \"#0A6ED3\", padding: 20 }} \n                    onPress={() => navigation.navigate(\"login\")} \n                  > \n                    Para escribir un comentario es necesario estar logeado{\" \"} \n                    <Text style={{ fontWeight: \"bold\" }}> \n                      pulsa AQUÍ para iniciar sesión \n                    </Text> \n                  </Text> \n                </View> \n              )} \n              {/* cada review recuperado de la BD y almacenado en el useState \n               Se visualizará con la estructura definida en la función Review */} \n              {map(reviews, (review, index) => ( \n                <Review key={index} review={review} /> \n              ))} \n            </View> \n          ); \n        }\n\n        const styles = StyleSheet.create({ \n            btnAddReview: { \n              backgroundColor: \"transparent\", \n            }, \n            btnTitleAddReview: { \n              color: \"#0A6ED3\", \n            }, \n            viewReview: { \n              flexDirection: \"row\", \n              padding: 10, \n              paddingBottom: 20, \n              borderBottomColor: \"#0A6ED3\", \n              borderBottomWidth: 1, \n            }, \n             viewInfo: { \n              flex: 1, \n              alignItems: \"flex-start\", \n            }, \n            reviewTitle: { \n              fontWeight: \"bold\", \n            },\n            reviewText: { \n                paddingTop: 2, \n                color: \"grey\", \n                marginBottom: 5, \n              }, \n              reviewDate: { \n                marginTop: 5, \n                color: \"grey\", \n                fontSize: 12, \n                position: \"absolute\", \n                right: 0, \n                bottom: 0, \n              }, \n            });"]},"metadata":{},"sourceType":"module"}