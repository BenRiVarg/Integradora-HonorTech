{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ben/Repos/Integradora-HonorTech/RestaurantExpo/app/screens/Account/Cuentas.js\";\n{}\nimport React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Logged from \"./Logged\";\nimport Invitado from \"./Invitados\";\nexport default function Cuentas() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      login = _useState2[0],\n      setLogin = _useState2[1];\n\n  useEffect(function () {\n    firebase.auth().onAuthStateChanged(function (user) {\n      {}\n      !user ? setLogin(false) : setLogin(true);\n    });\n  }, []);\n  if (login === null) return React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 30\n    }\n  }, \"Cargando...\");\n  {}\n  return login ? React.createElement(Logged, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 20\n    }\n  }) : React.createElement(Invitado, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 31\n    }\n  });\n}","map":{"version":3,"sources":["/home/ben/Repos/Integradora-HonorTech/RestaurantExpo/app/screens/Account/Cuentas.js"],"names":["React","useState","useEffect","firebase","Logged","Invitado","Cuentas","login","setLogin","auth","onAuthStateChanged","user"],"mappings":";;AAAA,CAMG;AACH,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;;;AAGA,OAAOC,MAAP;AACA,OAAOC,QAAP;AAEA,eAAe,SAASC,OAAT,GAAkB;AAE7B,kBAAuBL,QAAQ,CAAC,IAAD,CAA/B;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAaC,QAAb;;AACAN,EAAAA,SAAS,CAAC,YAAI;AAEdC,IAAAA,QAAQ,CAACM,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,IAAD,EAAS;AAC5C,OACkE;AAClE,OAACA,IAAD,GAAQH,QAAQ,CAAC,KAAD,CAAhB,GAAyBA,QAAQ,CAAC,IAAD,CAAjC;AACC,KAJD;AAKC,GAPQ,EAOP,EAPO,CAAT;AAUA,MAAGD,KAAK,KAAK,IAAb,EAAkB,OAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAClB,GACoE;AACpE,SAAOA,KAAK,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAc,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B;AAEA","sourcesContent":["{/*\r\nuseState: Función que crea internamente una variable que define el estado del componente.\r\nAcepta un valor inicial para la variable y dos elementos, el valor de la variable y\r\nla función para modificarla.\r\nuseEffect: Empleada para procesar la llamadas a API de\r\nfirebase y procesar el estado de la sesión.\r\n*/}\r\nimport React, {useState, useEffect} from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport {View, Text} from \"react-native\";\r\n//Importamos los componentes (vistas) de usuario logueado e invitado\r\nimport Logged from \"./Logged\";\r\nimport Invitado from \"./Invitados\";\r\n\r\nexport default function Cuentas(){\r\n    //Inicializamos en null la variable que define el estado de la sesión\r\n    const [login,setLogin]=useState(null);\r\n    useEffect(()=>{\r\n    //verifica el estado de autenticación\r\n    firebase.auth().onAuthStateChanged((user) =>{\r\n    {/* !user (si usuario es nullo o falso) Si la sesión existe cambia el\r\n    estado de la variable de sesióna true, de lo contrario a false */}\r\n    !user ? setLogin(false): setLogin(true);\r\n    });\r\n    },[]); //[] si esta vacio el proceso de verificación se ejecuta una sola vez\r\n   \r\n    //Si el estado de sesión es null significa que esta en proceso de verificación\r\n    if(login === null)return <Text>Cargando...</Text>;\r\n    {/*Al recibir el estado de la sesión (useEffect)\r\n    si login es true lanza la vista de Logged y si no la de Invitado */}\r\n    return login ? <Logged/>: <Invitado/>;\r\n   \r\n   }"]},"metadata":{},"sourceType":"module"}