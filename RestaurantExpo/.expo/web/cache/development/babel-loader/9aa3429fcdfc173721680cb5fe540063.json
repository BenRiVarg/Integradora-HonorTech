{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ben/Repos/Integradora-HonorTech/RestaurantExpo/app/screens/Sucursales/AddReview.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AirbnbRating, Button, Input } from \"react-native-elements\";\nimport Toast from \"react-native-easy-toast\";\nimport { firebaseApp } from \"../../utils/firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nvar db = firebase.firestore(firebaseApp);\nexport default function AddReview(propiedades) {\n  var navigation = propiedades.navigation,\n      route = propiedades.route;\n  var _route$params = route.params,\n      id = _route$params.id,\n      nombre = _route$params.nombre;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      rating = _useState2[0],\n      setRating = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      review = _useState6[0],\n      setReview = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  var toastRef = useRef();\n  useEffect(function () {\n    navigation.setOptions({\n      title: nombre\n    });\n  }, []);\n\n  var addRevew = function addRevew() {\n    if (!rating) {\n      toastRef.current.show(\"No has dado ninguna putuacion\");\n    } else if (!title) {\n      toastRef.current.show(\"El titulo es oblogatorio\");\n    } else if (!review) {\n      toastRef.current.show(\"El comentario es obligatorio\");\n    } else {\n      setIsLoading(true);\n      var user = firebase.auth().currentUser;\n      var datos = {\n        idUser: user.uid,\n        idSucursal: id,\n        title: title,\n        review: review,\n        rating: rating,\n        createAt: new Date()\n      };\n      db.collection(\"reviews\").add(datos).then(function () {\n        updateSucursal();\n      }).catch(function () {\n        toastRef.current.show(\"Error al enviar la review\");\n        setIsLoading(false);\n      });\n    }\n  };\n\n  var updateSucursal = function updateSucursal() {\n    var sucursalRef = db.collection(\"sucursales\").doc(id);\n    sucursalRef.get().then(function (response) {\n      var sucursalData = response.data();\n      var ratingTotal = sucursalData.ratingTotal + rating;\n      var votos = sucursalData.votos + 1;\n      var ratingResult = ratingTotal / votos;\n      sucursalRef.update({\n        rating: ratingResult,\n        ratingTotal: ratingTotal,\n        votos: votos\n      }).then(function () {\n        setIsLoading(false);\n        navigation.goBack();\n      });\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.viewBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.viewRating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(AirbnbRating, {\n    count: 5,\n    reviews: [\"PÃ©simo\", \"Deficiente\", \"Normal\", \"Muy Bueno\", \"Excelente\"],\n    defaultRating: 0,\n    size: 20,\n    onFinishRating: function onFinishRating(value) {\n      setRating(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.formReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Titulo\",\n    containerStyle: styles.input,\n    onChange: function onChange(e) {\n      return setTitle(e.nativeEvent.text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Comentario...\",\n    multiline: true,\n    inputContainerStyle: styles.textArea,\n    onChange: function onChange(e) {\n      return setReview(e.nativeEvent.text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Enviar Comentario\",\n    containerStyle: styles.btnContainer,\n    buttonStyle: styles.btn,\n    onPress: addRevew,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  })), React.createElement(Toast, {\n    ref: toastRef,\n    position: \"center\",\n    opacity: 0.9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  viewBody: {\n    flex: 1\n  },\n  viewRating: {\n    height: 110,\n    backgroundColor: \"#f2f2f2\"\n  },\n  formReview: {\n    flex: 1,\n    alignItems: \"center\",\n    margin: 10,\n    marginTop: 40\n  },\n  input: {\n    marginBottom: 10\n  },\n  textArea: {\n    height: 150,\n    width: \"100%\",\n    padding: 0,\n    margin: 0\n  },\n  btnContainer: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    marginTop: 20,\n    marginBottom: 10,\n    width: \"95%\"\n  },\n  btn: {\n    backgroundColor: \"#0A6ED3\"\n  }\n});","map":{"version":3,"sources":["/home/ben/Repos/Integradora-HonorTech/RestaurantExpo/app/screens/Sucursales/AddReview.js"],"names":["React","useState","useRef","useEffect","AirbnbRating","Button","Input","Toast","firebaseApp","firebase","db","firestore","AddReview","propiedades","navigation","route","params","id","nombre","rating","setRating","title","setTitle","review","setReview","isLoading","setIsLoading","toastRef","setOptions","addRevew","current","show","user","auth","currentUser","datos","idUser","uid","idSucursal","createAt","Date","collection","add","then","updateSucursal","catch","sucursalRef","doc","get","response","sucursalData","data","ratingTotal","votos","ratingResult","update","goBack","styles","viewBody","viewRating","value","formReview","input","e","nativeEvent","text","textArea","btnContainer","btn","StyleSheet","create","flex","height","backgroundColor","alignItems","margin","marginTop","marginBottom","width","padding","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useRef,useEffect } from \"react\"; \nimport { StyleSheet, Text, View } from \"react-native\"; \n//Nos permitirÃ¡ marcar la puntuaciÃ³n a travÃ©s de estrellas \nimport { AirbnbRating, Button, Input } from \"react-native-elements\"; \nimport Toast from \"react-native-easy-toast\"; \nimport { firebaseApp } from \"../../utils/firebase\"; \nimport firebase from \"firebase/app\"; \nimport \"firebase/firestore\"; \nconst db = firebase.firestore(firebaseApp);\n\nexport default function AddReview(propiedades) { \n    \n    const { navigation, route } = propiedades; \n    const { id ,nombre} = route.params; \n    //definimos los useState para almacenar los datos de la votaciÃ³n \n    const [rating, setRating] = useState(null); \n    const [title, setTitle] = useState(\"\"); \n    const [review, setReview] = useState(\"\"); \n    //nos permitirÃ¡ saber cuÃ¡ndo ya se realizo el registro \n    // y actualizaciÃ³n de puntuaciÃ³n \n    const [isLoading, setIsLoading] = useState(false); \n    const toastRef = useRef();\n\n    useEffect(() => { \n      /*setOption nos permite cambiar las propiedades del stack ver_sucursal, en \n      nuestro caso cambiaremos el titulo de la ventana con el nombre de la     \n       sucursal seleccionada de la lista*/ \n     navigation.setOptions({ title: nombre }); \n   }, []); \n\n    //FunciÃ³n que se ejecuta al enviar el comentario \n  const addRevew = () => { \n      //valida que se llenen todos los campos \n    if (!rating) { \n      toastRef.current.show(\"No has dado ninguna putuacion\"); \n    } else if (!title) { \n      toastRef.current.show(\"El titulo es oblogatorio\"); \n    } else if (!review) { \n      toastRef.current.show(\"El comentario es obligatorio\"); \n    } else { \n        //si todos los datos son correctos  \n      setIsLoading(true); \n     //recuperamos los datos del usuario logueado \n      const user = firebase.auth().currentUser; \n      /*creamos la estructura de los datos a almacenar sobre el comentario \n      usuario, sucursal a la que pertenece el comentario, titulo, descripciÃ³n, \n      puntos y fecha de creaciÃ³n*/ \n      const datos = { \n        idUser: user.uid, \n        idSucursal: id, \n        title: title, \n        review: review, \n        rating: rating, \n        createAt: new Date(),\n      };\n      //registramos los datos en la colecciÃ³n review \n      db.collection(\"reviews\") \n        .add(datos) \n        .then(() => { \n            /*si se almacena el comentario, ejecutamos la actualizaciÃ³n \n            del raiting de la sucursal*/ \n          updateSucursal(); \n        }) \n        .catch(() => { \n          toastRef.current.show(\"Error al enviar la review\"); \n          setIsLoading(false); \n        }); \n    } \n  };\n  //FunciÃ³n para actualizar puntos de la sucursal \n  const updateSucursal = () => { \n      //recuperamos el documento de la sucursal \n    const sucursalRef = db.collection(\"sucursales\").doc(id); \n    sucursalRef.get().then((response) => { \n        //recuperamos los datos del documento \n      const sucursalData = response.data(); \n      /*incrementamos el valor del campo ratingTotal con los puntos  \n      registrados en el nuevo comentario*/ \n      const ratingTotal = sucursalData.ratingTotal + rating; \n      /*incrementamos en uno el nÃºmero de votos realizados*/ \n      const votos = sucursalData.votos + 1; \n      /*calculamos el promedio de puntos de la sucursal que actualizarÃ¡ \n      el valor de las estrellas de la sucursal*/ \n      const ratingResult = ratingTotal / votos; \n      //actualizamos el documento de la sucursal con los datos modificados \n      sucursalRef \n        .update({ \n          rating: ratingResult, \n          ratingTotal, \n          votos, \n        }) \n        .then(() => { \n            //cuando se realiza la actualizaciÃ³n se envia a la ventana anterior \n          setIsLoading(false); \n          navigation.goBack(); \n        }); \n    }); \n  };\n  //estructura de la venana \n  return ( \n    <View style={styles.viewBody}> \n      <View style={styles.viewRating}> \n         {/*Mostrara 5 estrellas para dar la puntuaciÃ³n, cuando marquemos las \n         estrellas aparecerÃ¡ el valor acorde a los puntos*/} \n        <AirbnbRating \n          count={5} \n          reviews={[\"PÃ©simo\", \"Deficiente\", \"Normal\", \"Muy Bueno\", \"Excelente\"]} \n          defaultRating={0} \n          size={20} \n          onFinishRating={(value) => { \n              //al definir los puntos se actualiza el useState de raiting \n            setRating(value); \n          }} \n        /> \n       </View> \n      {/*Formulario de comentario */} \n      <View style={styles.formReview}> \n        <Input \n          placeholder=\"Titulo\" \n          containerStyle={styles.input} \n          onChange={(e) => setTitle(e.nativeEvent.text)} \n        /> \n        <Input \n          placeholder=\"Comentario...\" \n          multiline={true} \n          inputContainerStyle={styles.textArea} \n          onChange={(e) => setReview(e.nativeEvent.text)} \n        /> \n        <Button \n          title=\"Enviar Comentario\" \n          containerStyle={styles.btnContainer} \n          buttonStyle={styles.btn} \n          onPress={addRevew} \n        /> \n      </View> \n      <Toast ref={toastRef} position=\"center\" opacity={0.9} /> \n      \n    </View> \n  ); \n} \n\nconst styles = StyleSheet.create({ \n    viewBody: { \n      flex: 1, \n    }, \n    viewRating: { \n      height: 110, \n      backgroundColor: \"#f2f2f2\", \n    }, \n    formReview: { \n      flex: 1, \n      alignItems: \"center\", \n      margin: 10, \n      marginTop: 40, \n    }, \n    input: { \n      marginBottom: 10, \n    }, \n    textArea: { \n      height: 150, \n      width: \"100%\", \n      padding: 0, \n      margin: 0, \n    },\n    btnContainer: { \n        flex: 1, \n        justifyContent: \"flex-end\", \n        marginTop: 20, \n        marginBottom: 10, \n        width: \"95%\", \n      }, \n      btn: { \n        backgroundColor: \"#0A6ED3\", \n      }, \n    });"]},"metadata":{},"sourceType":"module"}