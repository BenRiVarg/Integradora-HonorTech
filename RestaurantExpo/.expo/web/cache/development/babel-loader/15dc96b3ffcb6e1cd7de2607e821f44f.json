{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ben/Repos/Integradora-HonorTech/RestaurantExpo/app/components/Account/FormLogin.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Input, Icon, Button } from \"react-native-elements\";\nimport { validarEmail } from \"../../utils/validaciones\";\nimport { isEmpty } from \"lodash\";\nimport firebase from 'firebase/app';\nimport { useNavigation } from \"@react-navigation/native\";\nexport default function FormLogin(toast) {\n  var navigation = useNavigation();\n  var toastRef = toast.toastRef;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      mostrar = _useState2[0],\n      setMostrar = _useState2[1];\n\n  var _useState3 = useState(valoresDefault),\n      _useState4 = _slicedToArray(_useState3, 2),\n      datos = _useState4[0],\n      setDatos = _useState4[1];\n\n  var onSubmit = function onSubmit() {\n    if (isEmpty(datos.email) || isEmpty(datos.password)) {\n      toastRef.current.show(\"No puedes dejar campos vacios\");\n    } else if (!validarEmail(datos.email)) {\n      toastRef.current.show(\"Estructura del email incorrecta\");\n    } else {\n      firebase.auth().signInWithEmailAndPassword(datos.email, datos.password).then(function (respuesta) {\n        navigation.navigate(\"cuentas\");\n      }).catch(function () {\n        toastRef.current.show(\"Lo sentimos: EL correo o contraseña no están registrados\");\n      });\n    }\n  };\n\n  var _onChange = function onChange(e, type) {\n    setDatos(_objectSpread(_objectSpread({}, datos), {}, _defineProperty({}, type, e.nativeEvent.text)));\n  };\n\n  return React.createElement(View, {\n    style: styles.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Correo Electr\\xF3nico\",\n    containerStyle: styles.inputForm,\n    onChange: function onChange(e) {\n      return _onChange(e, \"email\");\n    },\n    rightIcon: React.createElement(Icon, {\n      type: \"material-community-icon\",\n      name: \"alternate-email\",\n      iconStyle: styles.icono,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Contrase\\xF1a\",\n    containerStyle: styles.inputForm,\n    password: true,\n    secureTextEntry: mostrar ? false : true,\n    onChange: function onChange(e) {\n      return _onChange(e, \"password\");\n    },\n    rightIcon: React.createElement(Icon, {\n      type: \"material-community-icon\",\n      name: mostrar ? \"visibility\" : \"visibility-off\",\n      iconStyle: styles.icono,\n      onPress: function onPress() {\n        return setMostrar(!mostrar);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Iniciar Sesion\",\n    containerStyle: styles.btnContainer,\n    buttonStyle: styles.btn,\n    onPress: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction valoresDefault() {\n  return {\n    email: \"\",\n    password: \"\"\n  };\n}\n\nvar styles = StyleSheet.create({\n  formContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 30\n  },\n  inputForm: {\n    width: \"100%\",\n    marginTop: 20\n  },\n  btnContainer: {\n    marginTop: 20,\n    width: \"100%\"\n  },\n  btn: {\n    backgroundColor: \"#0A6ED3\"\n  },\n  icono: {\n    color: \"#c1c1c1\"\n  }\n});","map":{"version":3,"sources":["/home/ben/Repos/Integradora-HonorTech/RestaurantExpo/app/components/Account/FormLogin.js"],"names":["React","useState","Input","Icon","Button","validarEmail","isEmpty","firebase","useNavigation","FormLogin","toast","navigation","toastRef","mostrar","setMostrar","valoresDefault","datos","setDatos","onSubmit","email","password","current","show","auth","signInWithEmailAndPassword","then","respuesta","navigate","catch","onChange","e","type","nativeEvent","text","styles","formContainer","inputForm","icono","btnContainer","btn","StyleSheet","create","flex","alignItems","justifyContent","marginTop","width","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport { Input, Icon, Button } from \"react-native-elements\";\r\nimport { validarEmail } from \"../../utils/validaciones\";\r\nimport { isEmpty } from \"lodash\";\r\n//importamos la dependencia a firebase\r\nimport firebase from 'firebase/app';\r\nimport {useNavigation} from \"@react-navigation/native\"\r\n\r\nexport default function FormLogin(toast) {\r\n  //declaramos el objeto que manipulará el toast\r\n  const navigation =useNavigation();\r\n  const { toastRef } = toast;\r\n  const [mostrar, setMostrar] = useState(false);\r\n  /*El estado datos almacenará los datos del formulario\r\n  por default se inicializa con los campos creados\r\n  en la función valoresDefault */\r\n  const [datos, setDatos] = useState(valoresDefault);\r\n\r\n  /*Método que se ejecutará al dar clic en el botón\r\n  nos permitirá por el momento verificar en consola\r\n  los datos recuperados del formulario*/\r\n  const onSubmit = () => {\r\n \r\n    //Verificamos que no se envíen datos vacíos\r\n    if (\r\n      isEmpty(datos.email) ||\r\n      isEmpty(datos.password) \r\n    ) {\r\n      //Enviamos el mensaje al cuerpo del toast para hacerlo visible\r\n      toastRef.current.show(\"No puedes dejar campos vacios\");\r\n      \r\n    }\r\n    else if (!validarEmail(datos.email)) {\r\n      //Enviamos el mensaje al cuerpo del toast para hacerlo visible\r\n      toastRef.current.show(\"Estructura del email incorrecta\");\r\n     \r\n    } \r\n    else {\r\n      \r\n\r\n        firebase.auth().signInWithEmailAndPassword(datos.email, datos.password)\r\n        .then((respuesta) => {\r\n          //Redirección a Logged\r\n          navigation.navigate(\"cuentas\");\r\n        })\r\n        .catch(() => {\r\n          toastRef.current.show(\"Lo sentimos: EL correo o contraseña no están registrados\")\r\n        });\r\n    \r\n    }\r\n  };\r\n\r\n  const onChange = (e, type) => {\r\n  \r\n    setDatos({ ...datos, [type]: e.nativeEvent.text });\r\n  };\r\n  return (\r\n    <View style={styles.formContainer}>\r\n      <Input\r\n        placeholder=\"Correo Electrónico\"\r\n        containerStyle={styles.inputForm}\r\n        /*Es el que manda la información del input*/\r\n        onChange={(e) => onChange(e, \"email\")}\r\n        rightIcon={\r\n          <Icon\r\n            type=\"material-community-icon\"\r\n            name=\"alternate-email\"\r\n            iconStyle={styles.icono}\r\n          />\r\n        }\r\n      />\r\n      <Input\r\n        placeholder=\"Contraseña\"\r\n        containerStyle={styles.inputForm}\r\n        password={true}\r\n        /*Si mostrar es false se oculta el texto\r\n        de lo contrario se muestra*/\r\n        secureTextEntry={mostrar ? false : true}\r\n        /*Es el que manda la información del input*/\r\n        onChange={(e) => onChange(e, \"password\")}\r\n        rightIcon={\r\n          <Icon\r\n            type=\"material-community-icon\"\r\n            /*Si mostrar es false se muestra el icono\r\n            de ocultar contraseña de lo contrario se muestra\r\n            el icono de ver contraseña*/\r\n            name={mostrar ? \"visibility\" : \"visibility-off\"}\r\n            iconStyle={styles.icono}\r\n            onPress={() => setMostrar(!mostrar)}\r\n          />\r\n        }\r\n      />\r\n      <Button\r\n        title=\"Iniciar Sesion\"\r\n        containerStyle={styles.btnContainer}\r\n        buttonStyle={styles.btn}\r\n        /*Al hacer clic activamos el método onSubmit del botón */\r\n        onPress={onSubmit}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction valoresDefault() {\r\n  return {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  formContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 30,\r\n  },\r\n  inputForm: {\r\n    width: \"100%\",\r\n    marginTop: 20,\r\n  },\r\n  btnContainer: {\r\n    marginTop: 20,\r\n    width: \"100%\",\r\n  },\r\n  btn: {\r\n    backgroundColor: \"#0A6ED3\",\r\n  },\r\n  icono: {\r\n    color: \"#c1c1c1\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}