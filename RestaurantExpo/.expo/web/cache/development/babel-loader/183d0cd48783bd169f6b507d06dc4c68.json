{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ben/Repos/Integradora-HonorTech/RestaurantExpo/app/screens/Top/Comentarios.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button, Rating } from \"react-native-elements\";\nimport { map } from \"lodash\";\nimport { firebaseApp } from \"../../utils/firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nvar db = firebase.firestore(firebaseApp);\nexport default function Comentarios(propiedades) {\n  var _this = this;\n\n  var navigation = propiedades.navigation,\n      route = propiedades.route;\n  var _route$params = route.params,\n      id = _route$params.id,\n      nombre = _route$params.nombre;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      reviews = _useState2[0],\n      setReviews = _useState2[1];\n\n  useEffect(function () {\n    navigation.setOptions({\n      title: nombre\n    });\n  }, []);\n  useEffect(function () {\n    db.collection(\"reviews\").where(\"idSucursal\", \"==\", id).get().then(function (response) {\n      var resultReview = [];\n      response.forEach(function (doc) {\n        var data = doc.data();\n        data.id = doc.id;\n        resultReview.push(data);\n      });\n      setReviews(resultReview);\n    });\n  }, []);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Regresar\",\n    buttonStyle: styles.btnAddReview,\n    titleStyle: styles.btnTitleAddReview,\n    onPress: function onPress() {\n      navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })), map(reviews, function (review, index) {\n    return React.createElement(Review, {\n      key: index,\n      review: review,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    });\n  }));\n}\n\nfunction Review(propiedades) {\n  var _propiedades$review = propiedades.review,\n      title = _propiedades$review.title,\n      review = _propiedades$review.review,\n      rating = _propiedades$review.rating,\n      createAt = _propiedades$review.createAt;\n  var createReview = new Date(createAt.seconds * 1000);\n  return React.createElement(View, {\n    style: styles.viewReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.viewInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.reviewTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, title), React.createElement(Text, {\n    style: styles.reviewText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, review), React.createElement(Rating, {\n    imageSize: 15,\n    startingValue: rating,\n    readonly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.reviewDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, createReview.getDate(), \"/\", createReview.getMonth() + 1, \"/\", createReview.getFullYear(), \" - \", createReview.getHours(), \":\", createReview.getMinutes() < 10 ? \"0\" : \"\", createReview.getMinutes())));\n}\n\nvar styles = StyleSheet.create({\n  btnAddReview: {\n    backgroundColor: \"transparent\"\n  },\n  btnTitleAddReview: {\n    color: \"#0A6ED3\"\n  },\n  viewReview: {\n    flexDirection: \"row\",\n    padding: 10,\n    paddingBottom: 20,\n    borderBottomColor: \"#0A6ED3\",\n    borderBottomWidth: 1\n  },\n  viewInfo: {\n    flex: 1,\n    alignItems: \"flex-start\"\n  },\n  reviewTitle: {\n    fontWeight: \"bold\"\n  },\n  reviewText: {\n    paddingTop: 2,\n    color: \"grey\",\n    marginBottom: 5\n  },\n  reviewDate: {\n    marginTop: 5,\n    color: \"grey\",\n    fontSize: 12,\n    position: \"absolute\",\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["/home/ben/Repos/Integradora-HonorTech/RestaurantExpo/app/screens/Top/Comentarios.js"],"names":["React","useEffect","useState","Button","Rating","map","firebaseApp","firebase","db","firestore","Comentarios","propiedades","navigation","route","params","id","nombre","reviews","setReviews","setOptions","title","collection","where","get","then","response","resultReview","forEach","doc","data","push","styles","btnAddReview","btnTitleAddReview","goBack","review","index","Review","rating","createAt","createReview","Date","seconds","viewReview","viewInfo","reviewTitle","reviewText","reviewDate","getDate","getMonth","getFullYear","getHours","getMinutes","StyleSheet","create","backgroundColor","color","flexDirection","padding","paddingBottom","borderBottomColor","borderBottomWidth","flex","alignItems","fontWeight","paddingTop","marginBottom","marginTop","fontSize","position","right","bottom"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport {StyleSheet,View, Text} from 'react-native'\nimport { Button, Rating } from \"react-native-elements\"; \n\nimport { map } from \"lodash\"; \nimport { firebaseApp } from \"../../utils/firebase\"; \nimport firebase from \"firebase/app\"; \nimport \"firebase/firestore\"; \nconst db = firebase.firestore(firebaseApp)\nexport default function Comentarios(propiedades) {\n\n    const { navigation ,route} = propiedades; \n    const { id ,nombre} = route.params; \n    const [reviews, setReviews] = useState([]); \n\n    useEffect(() => { \n       \n        //Cambiar el titulo de la View en base a los datos enviados en la ventana anterior\n       navigation.setOptions({ title: nombre }); \n     }, []); \n     //Consulta de los comentarios por sucursal\n     useEffect(() => { \n      db.collection(\"reviews\") \n      .where(\"idSucursal\", \"==\", id) \n      .get() \n      .then((response) => { \n        const resultReview = []; \n        response.forEach((doc) => { \n          const data = doc.data(); \n          data.id = doc.id; \n          resultReview.push(data); \n        }); \n        setReviews(resultReview); \n      \n      });   \n     }, []); \n\n    return (\n        <View>\n            <View>\n            <Button \n              title=\"Regresar\" \n              buttonStyle={styles.btnAddReview} \n              titleStyle={styles.btnTitleAddReview} \n              /* icon={{ \n                type: \"material-community\", \n                name: \"square-edit-outline\", \n                color: \"#0A6ED3\", \n              }}  */\n              onPress={() => \n                {navigation.goBack(); }\n              } \n            />\n            </View>\n           {/* Despliegue de los comentarios para el usuario */}\n            {map(reviews, (review, index) => ( \n                <Review key={index} review={review} /> \n              ))} \n        </View>\n    )\n}\n\nfunction Review(propiedades) { \n    //Componente extraido de los elementos vistos en clase. Tiene el mismo funcionamiento y estructura\n    const { title, review, rating, createAt } = propiedades.review; \n    //Convertimos la fecha Timestamp  de firebase a una fecha de JavaScript \n    //Con una precision de millisecond. \n    const createReview = new Date(createAt.seconds * 1000); \n    return ( \n      <View style={styles.viewReview}> \n       \n        <View style={styles.viewInfo}> \n          <Text style={styles.reviewTitle}>{title}</Text> \n          <Text style={styles.reviewText}>{review}</Text> \n          <Rating imageSize={15} startingValue={rating} readonly /> \n          <Text style={styles.reviewDate}> \n            {/*Extraemeo de la fecha los valores por separado */} \n            {createReview.getDate()}/{createReview.getMonth() + 1}/ \n            {createReview.getFullYear()} - {createReview.getHours()}: \n            {createReview.getMinutes() < 10 ? \"0\" : \"\"} \n            {createReview.getMinutes()} \n          </Text> \n        </View> \n      </View> \n    ); \n  }\n  const styles = StyleSheet.create({ \n    btnAddReview: { \n      backgroundColor: \"transparent\", \n    }, \n    btnTitleAddReview: { \n      color: \"#0A6ED3\", \n    }, \n    viewReview: { \n      flexDirection: \"row\", \n      padding: 10, \n      paddingBottom: 20, \n      borderBottomColor: \"#0A6ED3\", \n      borderBottomWidth: 1, \n    }, \n     viewInfo: { \n      flex: 1, \n      alignItems: \"flex-start\", \n    }, \n    reviewTitle: { \n      fontWeight: \"bold\", \n    },\n    reviewText: { \n        paddingTop: 2, \n        color: \"grey\", \n        marginBottom: 5, \n      }, \n      reviewDate: { \n        marginTop: 5, \n        color: \"grey\", \n        fontSize: 12, \n        position: \"absolute\", \n        right: 0, \n        bottom: 0, \n      }, \n    });"]},"metadata":{},"sourceType":"module"}